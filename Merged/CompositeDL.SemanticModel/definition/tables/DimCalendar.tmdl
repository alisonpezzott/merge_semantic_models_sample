table DimCalendar
	lineageTag: 5ef01167-60f7-4923-a400-39fe6cb40f95
	dataCategory: Time

	column Date
		dataType: dateTime
		isKey
		formatString: Short Date
		lineageTag: ccf3a9d8-b452-4510-948f-3cab764186ea
		summarizeBy: none
		sourceColumn: Date

		annotation SummarizationSetBy = Automatic

		annotation UnderlyingDateTimeDataType = Date

	column DateIndex
		dataType: int64
		formatString: 0
		displayFolder: Date
		lineageTag: d2fb5f66-4591-4deb-b5e1-d50b4292f57f
		summarizeBy: none
		sourceColumn: DateIndex

		annotation SummarizationSetBy = Automatic

	column DaysToToday
		dataType: int64
		formatString: 0
		displayFolder: Date
		lineageTag: 31f29512-0a6c-4c35-baf2-72d679248ccf
		summarizeBy: none
		sourceColumn: DaysToToday

		annotation SummarizationSetBy = Automatic

	column CurrentDate
		dataType: string
		displayFolder: Date
		lineageTag: 5f6a733d-d9fe-4c51-b850-a50257a29dd7
		summarizeBy: none
		sourceColumn: CurrentDate
		sortByColumn: Date

		annotation SummarizationSetBy = Automatic

	column Year
		dataType: int64
		formatString: 0
		displayFolder: Year
		lineageTag: 7e07abd7-6cef-44d9-ada3-14cb24d17dc8
		summarizeBy: none
		sourceColumn: Year

		annotation SummarizationSetBy = Automatic

	column YearStart
		dataType: dateTime
		formatString: Short Date
		displayFolder: Year
		lineageTag: 3c1e97a2-258a-4698-a7c2-a103dc5b7f14
		summarizeBy: none
		sourceColumn: YearStart

		annotation SummarizationSetBy = Automatic

		annotation UnderlyingDateTimeDataType = Date

	column YearEnd
		dataType: dateTime
		formatString: Short Date
		displayFolder: Year
		lineageTag: 23288c2e-713c-42b6-b061-227489034035
		summarizeBy: none
		sourceColumn: YearEnd

		annotation SummarizationSetBy = Automatic

		annotation UnderlyingDateTimeDataType = Date

	column YearIndex
		dataType: int64
		formatString: 0
		displayFolder: Year
		lineageTag: b3a89d4f-573d-4fca-81de-10511f56d08a
		summarizeBy: none
		sourceColumn: YearIndex

		annotation SummarizationSetBy = Automatic

	column YearDescendingName
		dataType: int64
		formatString: 0
		displayFolder: Year
		lineageTag: 8f5af506-af08-45be-bfe0-781ecccd9d36
		summarizeBy: none
		sourceColumn: YearDescendingName
		sortByColumn: YearDescendingNumber

		annotation SummarizationSetBy = Automatic

	column YearDescendingNumber
		dataType: int64
		formatString: 0
		displayFolder: Year
		lineageTag: 1628574b-05e7-40dd-9268-8303017ca519
		summarizeBy: none
		sourceColumn: YearDescendingNumber

		annotation SummarizationSetBy = Automatic

	column YearsToToday
		dataType: int64
		formatString: 0
		displayFolder: Year
		lineageTag: 8fb00ac7-ed6d-4390-9602-5c6681b4f6f5
		summarizeBy: none
		sourceColumn: YearsToToday

		annotation SummarizationSetBy = Automatic

	column CurrentYear
		dataType: string
		displayFolder: Year
		lineageTag: e1722c6d-e586-40a9-a651-024415021646
		summarizeBy: none
		sourceColumn: CurrentYear
		sortByColumn: Year

		annotation SummarizationSetBy = Automatic

	column DayOfMonth
		dataType: int64
		formatString: 0
		displayFolder: Day
		lineageTag: fe0517ec-4768-4dd4-8734-5117a846767e
		summarizeBy: none
		sourceColumn: DayOfMonth

		annotation SummarizationSetBy = Automatic

	column DayOfYear
		dataType: int64
		formatString: 0
		displayFolder: Day
		lineageTag: e3e9ab12-f691-417f-82ac-69548ccc26a7
		summarizeBy: none
		sourceColumn: DayOfYear

		annotation SummarizationSetBy = Automatic

	column DayOfWeekNumber
		dataType: int64
		formatString: 0
		displayFolder: Day
		lineageTag: 3e853984-4de2-483f-b93b-a680d514c870
		summarizeBy: none
		sourceColumn: DayOfWeekNumber

		annotation SummarizationSetBy = Automatic

	column DayOfWeekName
		dataType: string
		displayFolder: Day
		lineageTag: 0fd3d22e-7af9-4653-ab15-650af0ba9f8d
		summarizeBy: none
		sourceColumn: DayOfWeekName
		sortByColumn: DayOfWeekNumber

		annotation SummarizationSetBy = Automatic

	column DayOfWeekNameShort
		dataType: string
		displayFolder: Day
		lineageTag: b0be4295-bdaa-4e63-a1e8-24aaabc65990
		summarizeBy: none
		sourceColumn: DayOfWeekNameShort
		sortByColumn: DayOfWeekNumber

		annotation SummarizationSetBy = Automatic

	column DayOfWeekNameInitials
		dataType: string
		displayFolder: Day
		lineageTag: 1524dbc6-d0f5-489d-9447-990b7fe314a9
		summarizeBy: none
		sourceColumn: DayOfWeekNameInitials

		annotation SummarizationSetBy = Automatic

	column MonthNumber
		dataType: int64
		formatString: 0
		displayFolder: Month
		lineageTag: beaa2f66-89b1-4b32-a813-d776565920fe
		summarizeBy: none
		sourceColumn: MonthNumber

		annotation SummarizationSetBy = Automatic

	column MonthName
		dataType: string
		displayFolder: Month
		lineageTag: f1089599-29a5-4ef2-a86d-97ba89dec3c5
		summarizeBy: none
		sourceColumn: MonthName
		sortByColumn: MonthNumber

		annotation SummarizationSetBy = Automatic

	column MonthNameShort
		dataType: string
		displayFolder: Month
		lineageTag: 87af4c24-1f5d-45f7-8a98-8426e4ebe70b
		summarizeBy: none
		sourceColumn: MonthNameShort
		sortByColumn: MonthNumber

		annotation SummarizationSetBy = Automatic

	column MonthNameInitials
		dataType: string
		displayFolder: Month
		lineageTag: 9284c4ce-4a97-4a93-a35a-20ab0a00304b
		summarizeBy: none
		sourceColumn: MonthNameInitials

		annotation SummarizationSetBy = Automatic

	column MonthYearName
		dataType: string
		displayFolder: Month
		lineageTag: 4f63c722-bf40-421e-ab1e-96c68b971ba0
		summarizeBy: none
		sourceColumn: MonthYearName
		sortByColumn: MonthYearNumber

		annotation SummarizationSetBy = Automatic

	column MonthYearNumber
		dataType: int64
		formatString: 0
		displayFolder: Month
		lineageTag: dbe0a7c5-c2a2-4b58-a987-f18819f19d71
		summarizeBy: none
		sourceColumn: MonthYearNumber

		annotation SummarizationSetBy = Automatic

	column MonthDayNumber
		dataType: int64
		formatString: 0
		displayFolder: Month
		lineageTag: d90158c2-44f1-4bce-80b1-9b46a4e4be81
		summarizeBy: none
		sourceColumn: MonthDayNumber

		annotation SummarizationSetBy = Automatic

	column MonthDayName
		dataType: string
		displayFolder: Month
		lineageTag: 5af101b5-bdd3-4f72-8190-59fe8f15fbf2
		summarizeBy: none
		sourceColumn: MonthDayName
		sortByColumn: MonthDayNumber

		annotation SummarizationSetBy = Automatic

	column MonthStart
		dataType: dateTime
		formatString: Short Date
		displayFolder: Month
		lineageTag: b3efd2bc-600e-4544-9696-d33359698626
		summarizeBy: none
		sourceColumn: MonthStart

		annotation SummarizationSetBy = Automatic

		annotation UnderlyingDateTimeDataType = Date

	column MonthEnd
		dataType: dateTime
		formatString: Short Date
		displayFolder: Month
		lineageTag: 29c3b98c-76b6-4856-8803-dc7f7af8c797
		summarizeBy: none
		sourceColumn: MonthEnd

		annotation SummarizationSetBy = Automatic

		annotation UnderlyingDateTimeDataType = Date

	column MonthIndex
		dataType: int64
		formatString: 0
		displayFolder: Month
		lineageTag: 9571ca5f-c5b4-4001-a889-f978159a5dda
		summarizeBy: none
		sourceColumn: MonthIndex

		annotation SummarizationSetBy = Automatic

	column MonthsToToday
		dataType: int64
		formatString: 0
		displayFolder: Month
		lineageTag: 23fe3dd6-5dc4-4f13-a4c2-26054bd7bcbd
		summarizeBy: none
		sourceColumn: MonthsToToday

		annotation SummarizationSetBy = Automatic

	column CurrentMonthName
		dataType: string
		displayFolder: Month
		lineageTag: 3bd03d8a-bea7-4a3f-a064-f761cb14adea
		summarizeBy: none
		sourceColumn: CurrentMonthName
		sortByColumn: MonthNumber

		annotation SummarizationSetBy = Automatic

	column CurrentMonthNameShort
		dataType: string
		displayFolder: Month
		lineageTag: 55911e07-d6cf-4bf7-bced-1eff5515b507
		summarizeBy: none
		sourceColumn: CurrentMonthNameShort
		sortByColumn: MonthNumber

		annotation SummarizationSetBy = Automatic

	column CurrentMonthYearName
		dataType: string
		displayFolder: Month
		lineageTag: 6f804a58-d4b3-48ba-bec5-fd21b1da3951
		summarizeBy: none
		sourceColumn: CurrentMonthYearName
		sortByColumn: MonthYearNumber

		annotation SummarizationSetBy = Automatic

	column QuarterNumber
		dataType: int64
		formatString: 0
		displayFolder: Quarter
		lineageTag: ed2ebda2-3ba7-4fd2-88b6-5e208c063c24
		summarizeBy: none
		sourceColumn: QuarterNumber

		annotation SummarizationSetBy = Automatic

	column QuarterName
		dataType: string
		displayFolder: Quarter
		lineageTag: fb259180-690e-4ddd-9f35-f44ed3058045
		summarizeBy: none
		sourceColumn: QuarterName
		sortByColumn: QuarterNumber

		annotation SummarizationSetBy = Automatic

	column QuarterYearName
		dataType: string
		displayFolder: Quarter
		lineageTag: a2aec604-8fdd-4f49-ab03-ea9adafcc5d5
		summarizeBy: none
		sourceColumn: QuarterYearName
		sortByColumn: QuarterYearNumber

		annotation SummarizationSetBy = Automatic

	column QuarterYearNumber
		dataType: int64
		formatString: 0
		displayFolder: Quarter
		lineageTag: f09051e4-9c5f-4cf7-aab6-d1e03b957d62
		summarizeBy: none
		sourceColumn: QuarterYearNumber

		annotation SummarizationSetBy = Automatic

	column QuarterStart
		dataType: dateTime
		formatString: Short Date
		displayFolder: Quarter
		lineageTag: d1bc816f-7e04-4912-94eb-2e122a258349
		summarizeBy: none
		sourceColumn: QuarterStart

		annotation SummarizationSetBy = Automatic

		annotation UnderlyingDateTimeDataType = Date

	column QuarterEnd
		dataType: dateTime
		formatString: Short Date
		displayFolder: Quarter
		lineageTag: 86856c78-5440-41bb-a71e-de4e1e7ff741
		summarizeBy: none
		sourceColumn: QuarterEnd

		annotation SummarizationSetBy = Automatic

		annotation UnderlyingDateTimeDataType = Date

	column QuarterIndex
		dataType: int64
		formatString: 0
		displayFolder: Quarter
		lineageTag: 9705dc47-9d56-42e6-856b-b372294be004
		summarizeBy: none
		sourceColumn: QuarterIndex

		annotation SummarizationSetBy = Automatic

	column QuartersToToday
		dataType: int64
		formatString: 0
		displayFolder: Quarter
		lineageTag: 72732bb7-f2d3-49a8-b0ec-22549fa063bb
		summarizeBy: none
		sourceColumn: QuartersToToday

		annotation SummarizationSetBy = Automatic

	column CurrentQuarter
		dataType: string
		displayFolder: Quarter
		lineageTag: 22a409da-5ce7-4638-bc44-c1702a35dbdc
		summarizeBy: none
		sourceColumn: CurrentQuarter
		sortByColumn: QuarterNumber

		annotation SummarizationSetBy = Automatic

	column CurrentQuarterYear
		dataType: string
		displayFolder: Quarter
		lineageTag: 1e5b1796-cfb8-47ba-a148-d441f528024e
		summarizeBy: none
		sourceColumn: CurrentQuarterYear
		sortByColumn: QuarterYearNumber

		annotation SummarizationSetBy = Automatic

	column MonthOfQuarterNumber
		dataType: int64
		formatString: 0
		displayFolder: Month
		lineageTag: fd9a012a-f98a-44b7-ab4b-1d2ffc5976d2
		summarizeBy: none
		sourceColumn: MonthOfQuarterNumber

		annotation SummarizationSetBy = Automatic

	column WeekOfYearNumberISO
		dataType: int64
		formatString: 0
		displayFolder: Week
		lineageTag: 3d5d30bb-3cfb-43fc-96ca-31f338fd8f43
		summarizeBy: none
		sourceColumn: WeekOfYearNumberISO

		annotation SummarizationSetBy = Automatic

	column YearISO
		dataType: int64
		formatString: 0
		displayFolder: Week
		lineageTag: e4e79914-323c-4fc2-8cd4-0b6615b02af1
		summarizeBy: none
		sourceColumn: YearISO

		annotation SummarizationSetBy = Automatic

	column WeekYearNumberISO
		dataType: int64
		formatString: 0
		displayFolder: Week
		lineageTag: d5ae5672-c0b4-4fcb-9057-d4173b11242f
		summarizeBy: none
		sourceColumn: WeekYearNumberISO

		annotation SummarizationSetBy = Automatic

	column WeekYearNameISO
		dataType: string
		displayFolder: Week
		lineageTag: 290ce67d-0611-40b8-8ad8-2fece4f1d266
		summarizeBy: none
		sourceColumn: WeekYearNameISO
		sortByColumn: WeekYearNumberISO

		annotation SummarizationSetBy = Automatic

	column WeekStartISO
		dataType: dateTime
		formatString: Short Date
		displayFolder: Week
		lineageTag: 6fac0575-f06a-4ec6-a78f-c506b7afb95e
		summarizeBy: none
		sourceColumn: WeekStartISO

		annotation SummarizationSetBy = Automatic

		annotation UnderlyingDateTimeDataType = Date

	column WeekEndISO
		dataType: dateTime
		formatString: Short Date
		displayFolder: Week
		lineageTag: 1cf00202-0129-4d37-b9bd-d63a0065768e
		summarizeBy: none
		sourceColumn: WeekEndISO

		annotation SummarizationSetBy = Automatic

		annotation UnderlyingDateTimeDataType = Date

	column WeekIndexISO
		dataType: int64
		formatString: 0
		displayFolder: Week
		lineageTag: 8aef8020-cf54-42a4-a75f-94d1b90b833e
		summarizeBy: none
		sourceColumn: WeekIndexISO

		annotation SummarizationSetBy = Automatic

	column WeeksToTodayISO
		dataType: int64
		formatString: 0
		displayFolder: Week
		lineageTag: 0eb06523-08d7-429f-aeed-654a28851d7e
		summarizeBy: none
		sourceColumn: WeeksToTodayISO

		annotation SummarizationSetBy = Automatic

	column CurrentWeekISO
		dataType: string
		displayFolder: Week
		lineageTag: 45c93fe8-4d3b-4723-b94a-6e18d7272a1f
		summarizeBy: none
		sourceColumn: CurrentWeekISO
		sortByColumn: WeekYearNumberISO

		annotation SummarizationSetBy = Automatic

	column WeekPeriodName
		dataType: string
		displayFolder: Week
		lineageTag: d0b32fc3-9554-474e-9194-1d164eacca72
		summarizeBy: none
		sourceColumn: WeekPeriodName
		sortByColumn: WeekYearNumberISO

		annotation SummarizationSetBy = Automatic

	column WeekOfMonthNumber
		dataType: int64
		formatString: 0
		displayFolder: Week
		lineageTag: 00e93702-1023-4102-bf69-b172e909fa2d
		summarizeBy: none
		sourceColumn: WeekOfMonthNumber

		annotation SummarizationSetBy = Automatic

	column HalfNumber
		dataType: int64
		formatString: 0
		displayFolder: Half
		lineageTag: 673744ee-4ac1-4069-b95a-e0f9eca53cfa
		summarizeBy: none
		sourceColumn: HalfNumber

		annotation SummarizationSetBy = Automatic

	column HalfYearName
		dataType: string
		displayFolder: Half
		lineageTag: 1e791ec3-8027-4fb2-abef-09032afb03a5
		summarizeBy: none
		sourceColumn: HalfYearName
		sortByColumn: HalfYearNumber

		annotation SummarizationSetBy = Automatic

	column HalfYearNumber
		dataType: int64
		formatString: 0
		displayFolder: Half
		lineageTag: 2a89a1ab-d4d6-4e11-b320-b583567cd865
		summarizeBy: none
		sourceColumn: HalfYearNumber

		annotation SummarizationSetBy = Automatic

	column HalfIndex
		dataType: int64
		formatString: 0
		displayFolder: Half
		lineageTag: f2422cb8-4929-4e97-807e-389a1afc8500
		summarizeBy: none
		sourceColumn: HalfIndex

		annotation SummarizationSetBy = Automatic

	column HalfsToToday
		dataType: int64
		formatString: 0
		displayFolder: Half
		lineageTag: a5d9657e-0041-4bac-85de-2e13c7f68ba8
		summarizeBy: none
		sourceColumn: HalfsToToday

		annotation SummarizationSetBy = Automatic

	column CurrentHalf
		dataType: string
		displayFolder: Half
		lineageTag: 52bf22b8-b0c7-4fdd-a1b1-5eee8f177390
		summarizeBy: none
		sourceColumn: CurrentHalf
		sortByColumn: HalfYearNumber

		annotation SummarizationSetBy = Automatic

	column BimesterNumber
		dataType: int64
		formatString: 0
		displayFolder: Bimester
		lineageTag: bce7985a-eb0e-4da2-b6ba-8eceb3f8341a
		summarizeBy: none
		sourceColumn: BimesterNumber

		annotation SummarizationSetBy = Automatic

	column BimesterYearName
		dataType: string
		displayFolder: Bimester
		lineageTag: 7d3790d1-fab1-4f2f-8676-f751c9cb9f5b
		summarizeBy: none
		sourceColumn: BimesterYearName
		sortByColumn: BimesterYearNumber

		annotation SummarizationSetBy = Automatic

	column BimesterYearNumber
		dataType: int64
		formatString: 0
		displayFolder: Bimester
		lineageTag: 829c8330-2273-43be-a3f3-ec9055f38403
		summarizeBy: none
		sourceColumn: BimesterYearNumber

		annotation SummarizationSetBy = Automatic

	column BimesterIndex
		dataType: int64
		formatString: 0
		displayFolder: Bimester
		lineageTag: 2d6463c5-a9d7-4a9f-bc77-9b194e13b502
		summarizeBy: none
		sourceColumn: BimesterIndex

		annotation SummarizationSetBy = Automatic

	column BimestersToToday
		dataType: int64
		formatString: 0
		displayFolder: Bimester
		lineageTag: 8dfa6dcc-7883-48ea-813e-e84c01323fc9
		summarizeBy: none
		sourceColumn: BimestersToToday

		annotation SummarizationSetBy = Automatic

	column CurrentBimester
		dataType: string
		displayFolder: Bimester
		lineageTag: fcfe9ba9-0608-40c9-bbe8-07718911e99e
		summarizeBy: none
		sourceColumn: CurrentBimester
		sortByColumn: BimesterYearNumber

		annotation SummarizationSetBy = Automatic

	column FortnightOfMonthNumber
		dataType: int64
		formatString: 0
		displayFolder: Fortnight
		lineageTag: bad18952-7073-4289-b726-c01244dc7dc7
		summarizeBy: none
		sourceColumn: FortnightOfMonthNumber

		annotation SummarizationSetBy = Automatic

	column FortnightMonthNumber
		dataType: int64
		formatString: 0
		displayFolder: Fortnight
		lineageTag: 6099fdb3-1984-472f-ac77-5b22ca6a480a
		summarizeBy: none
		sourceColumn: FortnightMonthNumber

		annotation SummarizationSetBy = Automatic

	column FortnightMonthName
		dataType: string
		displayFolder: Fortnight
		lineageTag: 296d1a1c-92d3-446d-92b2-0009be376a6f
		summarizeBy: none
		sourceColumn: FortnightMonthName
		sortByColumn: FortnightMonthNumber

		annotation SummarizationSetBy = Automatic

	column FortnightMonthYearNumber
		dataType: int64
		formatString: 0
		displayFolder: Fortnight
		lineageTag: c4cf0f9e-c7ca-4ec7-8109-0937360e26a2
		summarizeBy: none
		sourceColumn: FortnightMonthYearNumber

		annotation SummarizationSetBy = Automatic

	column FortnightMonthYearName
		dataType: string
		displayFolder: Fortnight
		lineageTag: d4636462-ea16-4eb0-a60c-430a734877d1
		summarizeBy: none
		sourceColumn: FortnightMonthYearName
		sortByColumn: FortnightMonthYearNumber

		annotation SummarizationSetBy = Automatic

	column FortnightIndex
		dataType: int64
		formatString: 0
		displayFolder: Fortnight
		lineageTag: f625492e-eea5-44b7-b332-fee2e0cef577
		summarizeBy: none
		sourceColumn: FortnightIndex

		annotation SummarizationSetBy = Automatic

	column FortnightsToToday
		dataType: int64
		formatString: 0
		displayFolder: Fortnight
		lineageTag: 416a8106-ce9c-4d11-81f4-06533e1ce73b
		summarizeBy: none
		sourceColumn: FortnightsToToday

		annotation SummarizationSetBy = Automatic

	column CurrentFortnight
		dataType: string
		displayFolder: Fortnight
		lineageTag: 8f4c7bf8-e3c9-4718-bd1b-4d7766f0733b
		summarizeBy: none
		sourceColumn: CurrentFortnight
		sortByColumn: FortnightMonthYearNumber

		annotation SummarizationSetBy = Automatic

	column ClosingDateRef
		dataType: dateTime
		formatString: Short Date
		displayFolder: Closing
		lineageTag: fcc26a6f-ef30-4abc-9c76-13d84fda392e
		summarizeBy: none
		sourceColumn: ClosingDateRef

		annotation SummarizationSetBy = Automatic

		annotation UnderlyingDateTimeDataType = Date

	column ClosingYear
		dataType: int64
		formatString: 0
		displayFolder: Closing
		lineageTag: c247bc81-3c1d-42ee-9f89-3d2a10cc1922
		summarizeBy: none
		sourceColumn: ClosingYear

		annotation SummarizationSetBy = Automatic

	column ClosingMonthName
		dataType: string
		displayFolder: Closing
		lineageTag: 0a87e1b6-17ae-4707-a2b8-abb417a63b5d
		summarizeBy: none
		sourceColumn: ClosingMonthName
		sortByColumn: ClosingMonthNumber

		annotation SummarizationSetBy = Automatic

	column ClosingMonthNameShort
		dataType: string
		displayFolder: Closing
		lineageTag: 012ade84-b446-403a-8f22-c759d911df26
		summarizeBy: none
		sourceColumn: ClosingMonthNameShort
		sortByColumn: ClosingMonthNumber

		annotation SummarizationSetBy = Automatic

	column ClosingMonthNumber
		dataType: int64
		formatString: 0
		displayFolder: Closing
		lineageTag: b2f00aa4-84cb-46fc-86b9-b8d39d65ef58
		summarizeBy: none
		sourceColumn: ClosingMonthNumber

		annotation SummarizationSetBy = Automatic

	column ClosingMonthYearName
		dataType: string
		displayFolder: Closing
		lineageTag: 86f0b966-5a59-47f3-bbf8-fb1e8004c556
		summarizeBy: none
		sourceColumn: ClosingMonthYearName
		sortByColumn: ClosingMonthYearNumber

		annotation SummarizationSetBy = Automatic

	column ClosingMonthYearNumber
		dataType: int64
		formatString: 0
		displayFolder: Closing
		lineageTag: 14f0ca8d-2174-469d-844f-e3e261420f4a
		summarizeBy: none
		sourceColumn: ClosingMonthYearNumber

		annotation SummarizationSetBy = Automatic

	column SeasonNorthNumber
		dataType: int64
		formatString: 0
		displayFolder: Season
		lineageTag: 8f07e6b3-b855-44c9-8029-fdb2eaecf257
		summarizeBy: none
		sourceColumn: SeasonNorthNumber

		annotation SummarizationSetBy = Automatic

	column SeasonNorthName
		dataType: string
		displayFolder: Season
		lineageTag: d254851e-718f-43c7-9c22-4538dff65c95
		summarizeBy: none
		sourceColumn: SeasonNorthName
		sortByColumn: SeasonNorthNumber

		annotation SummarizationSetBy = Automatic

	column SeasonSouthNumber
		dataType: int64
		formatString: 0
		displayFolder: Season
		lineageTag: d4c301fc-20f1-46a4-96d0-0a854ce9ebde
		summarizeBy: none
		sourceColumn: SeasonSouthNumber

		annotation SummarizationSetBy = Automatic

	column SeasonSouthName
		dataType: string
		displayFolder: Season
		lineageTag: 2433b7cd-713c-4663-9527-6002c3a4d52b
		summarizeBy: none
		sourceColumn: SeasonSouthName
		sortByColumn: SeasonSouthNumber

		annotation SummarizationSetBy = Automatic

	column Holiday
		dataType: string
		displayFolder: BusinessDays_Holidays
		lineageTag: 6f095cab-2da2-42e6-9917-055532773c74
		summarizeBy: none
		sourceColumn: Holiday

		annotation SummarizationSetBy = Automatic

	column BusinessDayNumber
		dataType: int64
		formatString: 0
		displayFolder: BusinessDays_Holidays
		lineageTag: c7910bb4-7eee-45d2-b26c-b0144248607b
		summarizeBy: none
		sourceColumn: BusinessDayNumber

		annotation SummarizationSetBy = Automatic

	column BusinessDayName
		dataType: string
		displayFolder: BusinessDays_Holidays
		lineageTag: 5e53d173-37d3-4e59-a124-a67205b74452
		summarizeBy: none
		sourceColumn: BusinessDayName

		annotation SummarizationSetBy = Automatic

	column FiscalYearStartNumber
		dataType: int64
		formatString: 0
		displayFolder: FiscalYear
		lineageTag: 9a14b02f-864e-4ce6-8627-f94add80b933
		summarizeBy: none
		sourceColumn: FiscalYearStartNumber

		annotation SummarizationSetBy = Automatic

	column FiscalYearEndNumber
		dataType: int64
		formatString: 0
		displayFolder: FiscalYear
		lineageTag: 619b5358-fad5-464d-80cc-47af97384df6
		summarizeBy: none
		sourceColumn: FiscalYearEndNumber

		annotation SummarizationSetBy = Automatic

	column FiscalYear
		dataType: string
		displayFolder: FiscalYear
		lineageTag: 183e98d5-92fa-44f3-b21f-256cbed92ea4
		summarizeBy: none
		sourceColumn: FiscalYear

		annotation SummarizationSetBy = Automatic

	column FiscalYearStart
		dataType: dateTime
		formatString: Short Date
		displayFolder: FiscalYear
		lineageTag: 681f514e-e3c6-43f6-a831-b80b151cd5a3
		summarizeBy: none
		sourceColumn: FiscalYearStart

		annotation SummarizationSetBy = Automatic

		annotation UnderlyingDateTimeDataType = Date

	column FiscalYearEnd
		dataType: dateTime
		formatString: Short Date
		displayFolder: FiscalYear
		lineageTag: b448dc47-1454-4090-917f-de83c16273ff
		summarizeBy: none
		sourceColumn: FiscalYearEnd

		annotation SummarizationSetBy = Automatic

		annotation UnderlyingDateTimeDataType = Date

	column CurrentFiscalYear
		dataType: string
		displayFolder: FiscalYear
		lineageTag: 85493578-b5e1-4dca-b73a-b4e36ba5fd3c
		summarizeBy: none
		sourceColumn: CurrentFiscalYear
		sortByColumn: FiscalYear

		annotation SummarizationSetBy = Automatic

	column FiscalYearsToToday
		dataType: int64
		formatString: 0
		displayFolder: FiscalYear
		lineageTag: 444dc53a-2744-4d04-8e47-9512a7b30c30
		summarizeBy: none
		sourceColumn: FiscalYearsToToday

		annotation SummarizationSetBy = Automatic

	column FiscalMonthNumber
		dataType: int64
		formatString: 0
		displayFolder: FiscalMonth
		lineageTag: 0bff2288-c285-4255-abaa-702382674e77
		summarizeBy: none
		sourceColumn: FiscalMonthNumber

		annotation SummarizationSetBy = Automatic

	column FiscalMonthName
		dataType: string
		displayFolder: FiscalMonth
		lineageTag: 533ff072-2720-4116-ba2e-4671bd00e882
		summarizeBy: none
		sourceColumn: FiscalMonthName
		sortByColumn: FiscalMonthNumber

		annotation SummarizationSetBy = Automatic

	column FiscalMonthNameShort
		dataType: string
		displayFolder: FiscalMonth
		lineageTag: 8912d466-8214-4b7c-8f68-e30ba4f1723f
		summarizeBy: none
		sourceColumn: FiscalMonthNameShort
		sortByColumn: FiscalMonthNumber

		annotation SummarizationSetBy = Automatic

	column CurrentFiscalMonth
		dataType: string
		displayFolder: FiscalMonth
		lineageTag: 563a6b62-82f5-453f-9280-1fad5d52c6cd
		summarizeBy: none
		sourceColumn: CurrentFiscalMonth
		sortByColumn: FiscalMonthNumber

		annotation SummarizationSetBy = Automatic

	column FiscalYearMonthName
		dataType: string
		displayFolder: FiscalMonth
		lineageTag: 51712b69-fd17-4fa3-9681-c4a553ef24ee
		summarizeBy: none
		sourceColumn: FiscalYearMonthName
		sortByColumn: FiscalYearMonthNumber

		annotation SummarizationSetBy = Automatic

	column FiscalYearMonthNumber
		dataType: int64
		formatString: 0
		displayFolder: FiscalMonth
		lineageTag: 1e7a15ef-1946-4141-af74-ec72fe5a8784
		summarizeBy: none
		sourceColumn: FiscalYearMonthNumber

		annotation SummarizationSetBy = Automatic

	column FiscalYearMonthCurrent
		dataType: string
		displayFolder: FiscalMonth
		lineageTag: 4c27e827-61df-4b36-a95b-1997a44be5e4
		summarizeBy: none
		sourceColumn: FiscalYearMonthCurrent
		sortByColumn: FiscalYearMonthNumber

		annotation SummarizationSetBy = Automatic

	column FiscalMonthsToToday
		dataType: int64
		formatString: 0
		displayFolder: FiscalMonth
		lineageTag: 53d5d269-176b-4a7a-a010-f1dd3d26cc57
		summarizeBy: none
		sourceColumn: FiscalMonthsToToday

		annotation SummarizationSetBy = Automatic

	column FiscalQuarterNumber
		dataType: int64
		formatString: 0
		displayFolder: FiscalQuarter
		lineageTag: a03cf899-e2a8-4229-9cc2-5d1c675ded47
		summarizeBy: none
		sourceColumn: FiscalQuarterNumber

		annotation SummarizationSetBy = Automatic

	column FiscalQuarterName
		dataType: string
		displayFolder: FiscalQuarter
		lineageTag: 57e9d956-6316-4ad5-a4b8-22d24e6ff1f6
		summarizeBy: none
		sourceColumn: FiscalQuarterName
		sortByColumn: FiscalQuarterNumber

		annotation SummarizationSetBy = Automatic

	column FiscalMonthOfQuarterNumber
		dataType: int64
		formatString: 0
		displayFolder: FiscalQuarter
		lineageTag: 404e5989-b7fe-4e13-a0db-1904798cc5c0
		summarizeBy: none
		sourceColumn: FiscalMonthOfQuarterNumber

		annotation SummarizationSetBy = Automatic

	column FiscalYearQuarterName
		dataType: string
		displayFolder: FiscalQuarter
		lineageTag: 71d38a67-017d-4198-9c20-4d85116cab79
		summarizeBy: none
		sourceColumn: FiscalYearQuarterName
		sortByColumn: FiscalYearQuarterNumber

		annotation SummarizationSetBy = Automatic

	column FiscalYearQuarterNumber
		dataType: int64
		formatString: 0
		displayFolder: FiscalQuarter
		lineageTag: d3e043a4-0093-4293-8c4b-3ac7147d1c60
		summarizeBy: none
		sourceColumn: FiscalYearQuarterNumber

		annotation SummarizationSetBy = Automatic

	column FiscalQuarterStart
		dataType: dateTime
		formatString: Short Date
		displayFolder: FiscalQuarter
		lineageTag: 68730aeb-c436-4fd9-9a23-9f8ef908a7a6
		summarizeBy: none
		sourceColumn: FiscalQuarterStart

		annotation SummarizationSetBy = Automatic

		annotation UnderlyingDateTimeDataType = Date

	column FiscalQuarterEnd
		dataType: dateTime
		formatString: Short Date
		displayFolder: FiscalQuarter
		lineageTag: 3505a931-6e4e-440d-b8bc-c2ead90eee55
		summarizeBy: none
		sourceColumn: FiscalQuarterEnd

		annotation SummarizationSetBy = Automatic

		annotation UnderlyingDateTimeDataType = Date

	column FiscalQuartersToToday
		dataType: int64
		formatString: 0
		displayFolder: FiscalQuarter
		lineageTag: abc1dea7-7099-4ae3-bb3c-db99288f2ebf
		summarizeBy: none
		sourceColumn: FiscalQuartersToToday

		annotation SummarizationSetBy = Automatic

	column CurrentFiscalQuarter
		dataType: string
		displayFolder: FiscalQuarter
		lineageTag: bf661498-8da3-4dc4-a639-a98e528aa7fa
		summarizeBy: none
		sourceColumn: CurrentFiscalQuarter
		sortByColumn: FiscalYearQuarterNumber

		annotation SummarizationSetBy = Automatic

	column DayOfFiscalQuarter
		dataType: int64
		formatString: 0
		displayFolder: FiscalQuarter
		lineageTag: 1bf5fe3a-0581-4ffd-ac77-d62590347c7b
		summarizeBy: none
		sourceColumn: DayOfFiscalQuarter

		annotation SummarizationSetBy = Automatic

	partition DimCalendar = m
		mode: import
		source = ```
				let
				
				    #"-----PARAMETERS-----" = "",
				
				    // Specify the start date 
				    startDate = #date(2020, 1, 1),
				
				    // Years ahead today
				    yearsAhead = 1,
				            
				    // Specify the start of the week. Default: Day.Monday 
				    startOfWeek = Day.Monday,
				    
				    // Specify the month of the fiscal year end. Default: 3 (March)
				    monthOfFiscalYearEnd = 3,
				    
				    /* Start day of the closing month. 
				       Default: 16 (it means the closing month goes from the 16th of the current month 
				       to the 15th of the next month) */
				    closingMonthStartDay = 16,
				    
				    // Available: "en-US", "pt-BR", "es-ES"
				    language = "en-US",
				
				    #"-----INTERNAL USE-----" = "",
				  
				    endDate = Date.AddYears(Date.EndOfYear(Date.From(DateTime.LocalNow())), yearsAhead),
				    currentDate = Date.From(DateTime.LocalNow()),
					currentYear = Date.Year(currentDate),
					currentMonth = Date.Month(currentDate),  
				    startYear = Date.Year(startDate),
					startMonth = Date.Month(startDate),
				    currentFiscalYear = Date.Year(Date.AddMonths(currentDate, 12-monthOfFiscalYearEnd)), 
				    
				
				    // The table with auxiliary texts cross the languages
				    auxiliaryTextTable = Table.UnpivotOtherColumns(
				        #table(
				            type table [Class=text, #"en-US"=text, #"pt-BR"=text, #"es-ES"=text],
				            {
				                  { "current"        , "Current"        , "Atual"       , "Actual"              }
				                , { "quarter"        , "Q"              , "T"           , "T"                   }
				                , { "week"           , "W"              , "S"           , "S"                   }
				                , { "half"           , "H"              , "S"           , "S"                   }
				                , { "bimester"       , "B"              , "B"           , "B"                   }
				                , { "fortnight"      , "FN"             , "Q"           , "Q"                   }
				                , { "summer"         , "Summer"         , "Verão"       , "Verano"              }
				                , { "spring"         , "Spring"         , "Primavera"   , "Primavera"           }
				                , { "autumn"         , "Autumn"         , "Outono"      , "Otoño"               }
				                , { "winter"         , "Winter"         , "Inverno"     , "Invierno"            }
				                , { "businessDay"    , "BusinessDay"    , "Dia Útil"    , "Dia Laborable"       }
				                , { "non-businessDay", "Non-BusinessDay", "Dia Não Útil", "Dia No Laborable"    }
				            }
				        ),
				        {"Class"}, "Language", "Value"
				    ),
				    
				    // Filtered table on selected language
				    auxiliaryTextTableOnLanguage = Table.Buffer(Table.SelectRows(auxiliaryTextTable, each [Language]=language)),
				    currentText = auxiliaryTextTableOnLanguage{[Class="current"]}[Value], 
				    quarterPrefix = auxiliaryTextTableOnLanguage{[Class="quarter"]}[Value], 
				    weekPrefix = auxiliaryTextTableOnLanguage{[Class="week"]}[Value],
				    halfPrefix = auxiliaryTextTableOnLanguage{[Class="half"]}[Value],
				    bimesterPrefix = auxiliaryTextTableOnLanguage{[Class="bimester"]}[Value],
				    fortnightPrefix = auxiliaryTextTableOnLanguage{[Class="fortnight"]}[Value],
				    summerText = auxiliaryTextTableOnLanguage{[Class="summer"]}[Value],
				    springText = auxiliaryTextTableOnLanguage{[Class="spring"]}[Value],
				    autumnText = auxiliaryTextTableOnLanguage{[Class="autumn"]}[Value],
				    winterText = auxiliaryTextTableOnLanguage{[Class="winter"]}[Value],
				    businessDayText = auxiliaryTextTableOnLanguage{[Class="businessDay"]}[Value],
				    nonBusinessDayText = auxiliaryTextTableOnLanguage{[Class="non-businessDay"]}[Value],
				    
				    // Invisible character (zero-width spacing)
				    zws = Character.FromNumber(8203),  
				
				    // List with all dates 
				    datesList = List.Dates(startDate, Duration.Days(endDate-startDate)+1, #duration(1, 0, 0, 0)),
				
				    // List with all years 
				    yearRange = List.Buffer({Date.Year(startDate)..Date.Year(endDate)}),
				            
				
				    #"-----GENERATE HOLIDAYS-----" = "", 
				
				    // Fixed holidays that occur every year 
				    fixedHolidaysList = #table(
				        type table [Day=Int64.Type, Month=Int64.Type, Holiday=text],
				        
				        if language="pt-BR" then
				            {
				                // Day, Month, Holiday
				                  { 01, 01, "Confraternização Universal"   }
				                , { 25, 01, "Aniversário da Cidade"        } 
				                , { 21, 04, "Tiradentes"                   } 
				                , { 01, 05, "Dia do Trabalhador"           } 
				                , { 09, 07, "Revolução Constitucionalista" } 
				                , { 07, 09, "Independência do Brasil"      } 
				                , { 12, 10, "N. Srª Aparecida"             } 
				                , { 02, 11, "Finados"                      } 
				                , { 15, 11, "Proclamação da República"     } 
				                , { 20, 11, "Consciência Negra"            } 
				                , { 24, 12, "Véspera de Natal"             } 
				                , { 25, 12, "Natal"                        } 
				                , { 31, 12, "Véspera de Ano Novo"          } 
				            }
				
				        else if language="en-US" then
				            {
				                // Day, Month, Holiday
				                  { 1,  1, "New Year's Day"}
				                , { 4,  7, "Independence Day"}
				                , {11, 11, "Veterans Day"}
				                , {25, 12, "Christmas Day"}
				            }
				
				        else if language="es-ES" then
				            {
				                // Day, Month, Holiday
				                  { 1, 1, "Año Nuevo"}
				                , { 1, 5, "Día del Trabajo" } 
				            }
				        else null
				    ),
				
				    // Function that generates the fixed holidays for all years 
				    fxGenerateFixedHolidays = (year)=>
				        Table.AddColumn(
				            fixedHolidaysList,
				            "Date",
				            each #date(year, [Month], [Day]),
				            type date
				        )[[Date], [Holiday]],
				            
				    // Generate the fixed holiday table 
				    fixedHolidays = Table.Combine(List.Transform(yearRange, fxGenerateFixedHolidays)),
				    
				    // Function that generates the moving holidays 
				    fxGenerateMovingHolidays = (year) =>
				    let
				        modExcel = (x, y) =>
				            let
				                m = Number.Mod(x, y)
				            in
				                if m < 0 then m + y else m,
				        easter = Date.From(
				            Number.Round(
				                Number.From(#date(year, 4, 1))
				                    / 7
				                    + modExcel(19 * modExcel(year, 19) - 7, 30) * 0.14,
				                0,
				                RoundingMode.Up
				            )
				                * 7
				                - 6
				        ),
				        movingHolidays = #table(
				            type table [Date = date, Holiday = text],
				            {
				                  { Date.AddDays(easter, -2  ), if language = "pt-BR" then "Sexta-Feira Santa" else if language = "en-US" then "Good Friday" else if language = "es-ES" then "Viernes Santo" else null } 
				                , { easter                    , if language = "pt-BR" then "Páscoa" else if language = "en-US" then "Easter" else if language = "es-ES" then "Pascua" else null }
				                , { Date.AddDays(easter, 60  ), "Corpus Christi"             }
				            //  , { Date.AddDays(easter, -48 ), "Segunda-feira de Carnaval"  }
				            //  , { Date.AddDays(easter, -47 ), "Terça-feira de Carnaval"    }
				            //  , { Date.AddDays(easter, -46 ), "Quarta-feira de Cinzas"     }
				            }
				        )
				    in
				        movingHolidays,
				            
				    // Generate the moving holiday table 
				    movingHolidays = Table.Combine(List.Transform(yearRange, fxGenerateMovingHolidays)),
				            
				    // Table containing all holidays 
				    holidays = Table.Group(Table.Combine({fixedHolidays, movingHolidays}), {"Date"}, {{"Holiday", each Text.Combine(_[Holiday], "/"), type text}}),
				    
				    #"-----GENERATE DATA-----" = "",
				
				    #"-----DATE-----" = "",
				    datesTable = Table.FromList(datesList, Splitter.SplitByNothing(), type table [ Date = date ]),
				    add_DateIndex = Table.AddIndexColumn(datesTable, "DateIndex", 1, 1, Int64.Type),
				    add_DaysToToday = Table.AddColumn(add_DateIndex, "DaysToToday", each Number.From([Date] - currentDate), Int64.Type),
				    add_CurrentDate = Table.AddColumn(add_DaysToToday, "CurrentDate", each if [DaysToToday] = 0 then currentText else Date.ToText([Date], "dd/MM/yyyy"), type text),
				
				    #"-----YEAR-----" = "",    
				    add_Year = Table.AddColumn(add_CurrentDate, "Year", each Date.Year([Date]), Int64.Type),
				    add_YearStart = Table.AddColumn(add_Year, "YearStart", each Date.StartOfYear([Date]), type date),
				    add_YearEnd = Table.AddColumn(add_YearStart, "YearEnd", each Date.EndOfYear([Date]), type date),
				    add_YearIndex = Table.AddColumn(add_YearEnd, "YearIndex", each [Year] - startYear + 1, Int64.Type),
				    add_YearDescendingName = Table.AddColumn(add_YearIndex, "YearDescendingName", each [Year], Int64.Type),
				    add_YearDescendingNumber = Table.AddColumn(add_YearDescendingName, "YearDescendingNumber", each [Year] * -1, Int64.Type),
				    add_YearsToToday = Table.AddColumn(add_YearDescendingNumber, "YearsToToday", each [Year] - Date.Year(currentDate), Int64.Type),
				    add_CurrentYear = Table.AddColumn(add_YearsToToday, "CurrentYear", each if [YearsToToday] = 0 then currentText else Text.From([Year]), type text),
				
				    #"-----DAY-----" = "",
				    add_DayOfMonth = Table.AddColumn(add_CurrentYear, "DayOfMonth", each Date.Day([Date]), Int64.Type),
				    add_DayOfYear = Table.AddColumn(add_DayOfMonth, "DayOfYear", each Date.DayOfYear([Date]), Int64.Type),
				    add_DayOfWeekNumber = Table.AddColumn(add_DayOfYear, "DayOfWeekNumber", each Date.DayOfWeek([Date], startOfWeek), Int64.Type),
				    add_DayOfWeekName = Table.AddColumn(add_DayOfWeekNumber, "DayOfWeekName", each Text.Proper(Date.DayOfWeekName([Date], language)), type text),
				    add_DayOfWeekNameShort = Table.AddColumn(add_DayOfWeekName, "DayOfWeekNameShort", each Text.Start([DayOfWeekName], 3), type text),
				    add_DayOfWeekNameInitials = Table.AddColumn(add_DayOfWeekNameShort, "DayOfWeekNameInitials", each Text.Repeat(zws, 7-[DayOfWeekNumber]) & Text.Start([DayOfWeekName], 1), type text),
				
				    #"-----MONTH-----" = "",
				    add_MonthNumber = Table.AddColumn(add_DayOfWeekNameInitials, "MonthNumber", each Date.Month([Date]), Int64.Type),
				    add_MonthName = Table.AddColumn(add_MonthNumber, "MonthName", each Text.Proper(Date.MonthName([Date], language)), type text), 
				    add_MonthNameShort = Table.AddColumn(add_MonthName, "MonthNameShort", each Text.Start([MonthName], 3), type text), 
				    add_MonthNameInitials = Table.AddColumn(add_MonthNameShort, "MonthNameInitials", each Text.Repeat(zws, 12-[MonthNumber]) & Text.Start([MonthName], 1), type text),
				    add_MonthYearName = Table.AddColumn(add_MonthNameInitials, "MonthYearName", each Text.Proper(Date.ToText([Date], [Format="MMM/yy", Culture=language])), type text),
				    add_MonthYearNumber = Table.AddColumn(add_MonthYearName, "MonthYearNumber", each [Year] * 100 + [MonthNumber], Int64.Type),
				    add_MonthDayNumber = Table.AddColumn(add_MonthYearNumber, "MonthDayNumber", each [MonthNumber] * 100 + [DayOfMonth], Int64.Type),
				    add_MonthDayName = Table.AddColumn(add_MonthDayNumber, "MonthDayName", each [MonthNameShort] & " " & Text.From([DayOfMonth]), type text), 
				    add_MonthStart = Table.AddColumn(add_MonthDayName, "MonthStart", each Date.StartOfMonth([Date]), type date),
				    add_MonthEnd = Table.AddColumn(add_MonthStart, "MonthEnd", each Date.EndOfMonth([Date]), type date),
				    add_MonthIndex = Table.AddColumn(add_MonthEnd, "MonthIndex", each 12 * ([Year]-Date.Year(startDate)) + [MonthNumber], Int64.Type),
				    add_MonthsToToday = Table.AddColumn(add_MonthIndex, "MonthsToToday", each ([Year] * 12 - 1 + [MonthNumber]) - (currentYear * 12 - 1 + Date.Month(currentDate)), Int64.Type),
				    add_CurrentMonthName = Table.AddColumn(add_MonthsToToday, "CurrentMonthName", each if currentMonth = [MonthNumber] then currentText else [MonthName], type text),
				    add_CurrentMonthNameShort = Table.AddColumn(add_CurrentMonthName, "CurrentMonthNameShort", each if currentMonth = [MonthNumber] then currentText else [MonthNameShort], type text),
				    add_CurrentMonthYearName = Table.AddColumn(add_CurrentMonthNameShort, "CurrentMonthYearName", each if [MonthsToToday] = 0 then currentText else [MonthYearName], type text),
				
				    #"-----QUARTER-----" = "",
				    add_QuarterNumber = Table.AddColumn(add_CurrentMonthYearName, "QuarterNumber", each Date.QuarterOfYear([Date]), Int64.Type), 
				    add_QuarterName = Table.AddColumn(add_QuarterNumber, "QuarterName", each quarterPrefix & Text.From([QuarterNumber]), type text),
				    add_QuarterYearName = Table.AddColumn(add_QuarterName, "QuarterYearName", each [QuarterName] & " " & Text.End(Text.From([Year]), 2), type text),
				    add_QuarterYearNumber = Table.AddColumn(add_QuarterYearName, "QuarterYearNumber", each [Year] * 100 + [QuarterNumber], Int64.Type), 
				    add_QuarterStart = Table.AddColumn(add_QuarterYearNumber, "QuarterStart", each Date.StartOfQuarter([Date]), type date),
				    add_QuarterEnd = Table.AddColumn(add_QuarterStart, "QuarterEnd", each Date.EndOfQuarter([Date]), type date),
				    add_QuarterIndex = Table.AddColumn(add_QuarterEnd, "QuarterIndex", each 4 * ([Year] - Date.Year(startDate)) + [QuarterNumber], Int64.Type),
				    add_QuartersToToday = Table.AddColumn(add_QuarterIndex, "QuartersToToday", each ([Year] * 4 - 1 + [QuarterNumber]) - (currentYear * 4 - 1 + Date.QuarterOfYear(currentDate)), Int64.Type),
				    add_CurrentQuarter = Table.AddColumn(add_QuartersToToday, "CurrentQuarter", each if Date.QuarterOfYear(currentDate) = [QuarterNumber] then currentText else [QuarterName], type text),
				    add_CurrentQuarterYear = Table.AddColumn(add_CurrentQuarter, "CurrentQuarterYear", each if [QuartersToToday] = 0 then currentText else [QuarterYearName], type text),
				    add_MonthOfQuarterNumber = Table.AddColumn(add_CurrentQuarterYear, "MonthOfQuarterNumber", each Number.Mod([MonthNumber] - 1, 3) + 1, Int64.Type),
				
				    #"-----WEEK-----" = "",
				    add_WeekOfYearNumberISO = Table.AddColumn(
				        add_MonthOfQuarterNumber, 
				        "WeekOfYearNumberISO", 
				        each let
				            thursdayInWeek = Date.AddDays(
				                [Date],
				                3 - Date.DayOfWeek([Date], Day.Monday)
				            ),
				            startYearThursdayInWeek = #date(Date.Year(thursdayInWeek), 1, 1),
				            diffDays = Duration.Days(thursdayInWeek - startYearThursdayInWeek)
				        in
				            Number.IntegerDivide(diffDays, 7, 0) + 1,
				        Int64.Type
				    ),
				
				    add_YearISO = Table.AddColumn(add_WeekOfYearNumberISO, "YearISO", each Date.Year(Date.AddDays([Date], 26 - [WeekOfYearNumberISO])), Int64.Type),
				    add_WeekYearNumberISO = Table.AddColumn(add_YearISO, "WeekYearNumberISO", each [YearISO] * 100 + [WeekOfYearNumberISO], Int64.Type),
				    add_WeekYearNameISO = Table.AddColumn(add_WeekYearNumberISO, "WeekYearNameISO", each weekPrefix & Text.PadStart(Text.From([WeekOfYearNumberISO]), 2, "0") & " " & Text.From([YearISO]), type text),
				    add_WeekStartISO = Table.AddColumn(add_WeekYearNameISO, "WeekStartISO", each Date.StartOfWeek([Date], Day.Monday), type date), 
				    add_WeekEndISO = Table.AddColumn(add_WeekStartISO, "WeekEndISO", each Date.EndOfWeek([Date], Day.Monday), type date), 
				    add_WeekIndexISO = Table.AddColumn(add_WeekEndISO, "WeekIndexISO", each Number.From([WeekStartISO] - Date.StartOfWeek(startDate, Day.Monday)) / 7 + 1, Int64.Type),
				    add_WeeksToTodayISO = Table.AddColumn(add_WeekIndexISO, "WeeksToTodayISO", each Number.From([WeekStartISO] - Date.StartOfWeek(currentDate, Day.Monday)) / 7, Int64.Type),
				    add_CurrentWeekISO = Table.AddColumn(add_WeeksToTodayISO, "CurrentWeekISO", each if [WeeksToTodayISO] = 0 then currentText else [WeekYearNameISO], type text),
				    add_WeekPeriodName = Table.AddColumn(add_CurrentWeekISO, "WeekPeriodName", each [WeekYearNameISO] & ": " & Date.ToText([WeekStartISO], [Format="dd/MM/yyyy"]) & "~" & Date.ToText([WeekEndISO], [Format="dd/MM/yyyy"]), type text),
				    add_WeekOfMonthNumber = Table.AddColumn(add_WeekPeriodName, "WeekOfMonthNumber", each Date.WeekOfMonth([Date], startOfWeek), Int64.Type),
				    
				    #"-----HALF-----" = "",
				    add_HalfNumber = Table.AddColumn(add_WeekOfMonthNumber, "HalfNumber", each if [MonthNumber] <= 6 then 1 else 2, Int64.Type),
				    add_HalfYearName = Table.AddColumn(add_HalfNumber, "HalfYearName", each halfPrefix & Text.From([HalfNumber]) & " " & Text.From([Year]), type text),
				    add_HalfYearNumber = Table.AddColumn(add_HalfYearName, "HalfYearNumber", each [Year] * 100 + [HalfNumber], Int64.Type),
				    add_HalfIndex = Table.AddColumn(add_HalfYearNumber, "HalfIndex", each (2*([Year] - Date.Year(startDate))) + [HalfNumber], Int64.Type),
				    add_HalfsToToday = Table.AddColumn(add_HalfIndex, "HalfsToToday", each [HalfIndex] - ( 2 * ( currentYear - startYear ) + ( if currentMonth <= 6 then 1 else 2 )), Int64.Type),
				    add_CurrentHalf = Table.AddColumn(add_HalfsToToday, "CurrentHalf", each if [HalfsToToday] = 0 then currentText else [HalfYearName], type text), 
				
				    #"-----BIMESTER-----" = "",
				    add_BimesterNumber = Table.AddColumn(add_CurrentHalf, "BimesterNumber", each Number.RoundUp([MonthNumber]/ 2), Int64.Type),
				    add_BimesterYearName = Table.AddColumn(add_BimesterNumber, "BimesterYearName", each bimesterPrefix & Text.From([BimesterNumber]) & " " & Text.From([Year]), type text),
				    add_BimesterYearNumber = Table.AddColumn(add_BimesterYearName, "BimesterYearNumber", each [Year] * 100 + [BimesterNumber], Int64.Type),
				    add_BimesterIndex = Table.AddColumn(add_BimesterYearNumber, "BimesterIndex", each (6*([Year] - Date.Year(startDate))) + [BimesterNumber], Int64.Type),
				    add_BimestersToToday = Table.AddColumn(add_BimesterIndex, "BimestersToToday", each ( 6 * ( [Year] - startYear ) + [BimesterNumber])  - (( 6 * ( currentYear - startYear ) ) + Number.RoundUp ( currentMonth / 2, 0 )), Int64.Type),
				    add_CurrentBimester = Table.AddColumn(add_BimestersToToday, "CurrentBimester", each if [BimestersToToday] = 0 then currentText else [BimesterYearName], type text),
				
				    #"-----FORTNIGHT-----" = "",
				    add_FortnightOfMonthNumber = Table.AddColumn(add_CurrentBimester, "FortnightOfMonthNumber", each if [DayOfMonth] <= 15 then 1 else 2, Int64.Type),
				    add_FortnightMonthNumber = Table.AddColumn(add_FortnightOfMonthNumber, "FortnightMonthNumber", each [MonthNumber] * 10 + [FortnightOfMonthNumber], Int64.Type),
				    add_FortnightMonthName = Table.AddColumn(add_FortnightMonthNumber, "FortnightMonthName", each [MonthNameShort] & " " & Text.From([FortnightOfMonthNumber]), type text),
				    add_FortnightMonthYearNumber = Table.AddColumn(add_FortnightMonthName, "FortnightMonthYearNumber", each [Year] * 10000 + [MonthNumber] * 100 + [FortnightMonthNumber], Int64.Type),
				    add_FortnightMonthYearName = Table.AddColumn(add_FortnightMonthYearNumber, "FortnightMonthYearName", each fortnightPrefix & Text.From([FortnightOfMonthNumber]) & " " & [MonthNameShort] & " " & Text.From([Year]), type text),
				    add_FortnightIndex = Table.AddColumn(add_FortnightMonthYearName, "FortnightIndex", each 24 * ([Year] - Date.Year(startDate)) + 2 * ([MonthNumber]-Date.Month(startDate)) + [FortnightOfMonthNumber] , Int64.Type),
				    add_FortnightsToToday = Table.AddColumn(add_FortnightIndex, "FortnightsToToday", each [FortnightIndex] - ( (24 * (currentYear - Date.Year(startDate))) + (2 * (Date.Month(currentDate)-Date.Month(startDate))) + (if Date.Day(currentDate) <= 15 then 1 else 2)), Int64.Type),
				    add_CurrentFortnight = Table.AddColumn(add_FortnightsToToday, "CurrentFortnight", each if [FortnightsToToday] = 0 then currentText else [FortnightMonthName], type text),
				    
				    #"-----CLOSING-----" = "",
				    add_ClosingDateRef = Table.AddColumn(add_CurrentFortnight, "ClosingDateRef", each if [DayOfMonth] <= closingMonthStartDay then [Date] else Date.AddMonths([Date], 1), type date),
				    add_ClosingYear = Table.AddColumn(add_ClosingDateRef, "ClosingYear", each Date.Year([ClosingDateRef]), Int64.Type),
				    add_ClosingMonthName = Table.AddColumn(add_ClosingYear, "ClosingMonthName", each Text.Proper(Date.MonthName([ClosingDateRef], language)), type text),
				    add_ClosingMonthNameShort = Table.AddColumn(add_ClosingMonthName, "ClosingMonthNameShort", each Text.Start([ClosingMonthName], 3), type text), 
				    add_ClosingMonthNumber = Table.AddColumn(add_ClosingMonthNameShort, "ClosingMonthNumber", each Date.Month([ClosingDateRef]), Int64.Type),
				    add_ClosingMonthYearName = Table.AddColumn(add_ClosingMonthNumber, "ClosingMonthYearName", each [ClosingMonthNameShort] & "/" & Text.End(Text.From([ClosingYear]), 2), type text), 
				    add_ClosingMonthYearNumber = Table.AddColumn(add_ClosingMonthYearName, "ClosingMonthYearNumber", each [ClosingYear] * 100 + [ClosingMonthNumber], Int64.Type),
				
				    #"-----SEASONS-----" = "",
				    add_SeasonNorthNumber = Table.AddColumn(
				        add_ClosingMonthYearNumber, 
				        "SeasonNorthNumber", 
				        each if [MonthDayNumber] >= 321 and [MonthDayNumber] <= 620  then 1 else 
				             if [MonthDayNumber] >= 621 and [MonthDayNumber] <= 921  then 2 else 
				             if [MonthDayNumber] >= 922 and [MonthDayNumber] <= 1221 then 3 else 4,
				        Int64.Type
				    ),
				
				    add_SeasonNorthName = Table.AddColumn(
				        add_SeasonNorthNumber, 
				        "SeasonNorthName", 
				        each if [SeasonNorthNumber] = 1 then springText else 
				             if [SeasonNorthNumber] = 2 then summerText else 
				             if [SeasonNorthNumber] = 3 then autumnText else winterText, 
				        type text
				    ),
				
				    add_SeasonSouthNumber = Table.AddColumn(
				        add_SeasonNorthName, 
				        "SeasonSouthNumber", 
				        each if [MonthDayNumber] >= 321 and [MonthDayNumber] <= 620  then 1 else 
				             if [MonthDayNumber] >= 621 and [MonthDayNumber] <= 921  then 2 else 
				             if [MonthDayNumber] >= 922 and [MonthDayNumber] <= 1221 then 3 else 4,
				        Int64.Type
				    ),
				
				    add_SeasonSouthName = Table.AddColumn(
				        add_SeasonSouthNumber, 
				        "SeasonSouthName", 
				        each if [SeasonNorthNumber] = 1 then autumnText else 
				             if [SeasonNorthNumber] = 2 then winterText else 
				             if [SeasonNorthNumber] = 3 then springText else summerText, 
				        type text
				    ),
				
				    #"-----BUSINESS-----" = "",
				    add_Holiday = Table.RenameColumns(Table.RemoveColumns(Table.Join(add_SeasonSouthName, "Date", Table.PrefixColumns(holidays, "h"), "h.Date", JoinKind.LeftOuter, JoinAlgorithm.LeftIndex), "h.Date"), {{"h.Holiday", "Holiday"}}),
				    add_BusinessDayNumber = Table.AddColumn(add_Holiday, "BusinessDayNumber", each if [Holiday] <> null or Date.DayOfWeek([Date], Day.Monday) > 4 then 0 else 1, Int64.Type),
				    add_BusinessDayName = Table.AddColumn(add_BusinessDayNumber, "BusinessDayName", each if [BusinessDayNumber] = 1 then businessDayText else nonBusinessDayText, type text),
				
				
				    #"-----FISCAL COLUMNS-----" = "", 
				    #"-----FISCAL YEAR-----" = "", 
				    add_FiscalYearStartNumber = Table.AddColumn(add_BusinessDayName, "FiscalYearStartNumber", each Date.Year(Date.AddMonths([Date], -monthOfFiscalYearEnd)), Int64.Type),
				    add_FiscalYearEndNumber = Table.AddColumn(add_FiscalYearStartNumber, "FiscalYearEndNumber", each [FiscalYearStartNumber] + 1, Int64.Type),
				    add_FiscalYear = Table.AddColumn(add_FiscalYearEndNumber, "FiscalYear", each "FY " & Text.From([FiscalYearStartNumber]) & "-" &Text.From([FiscalYearEndNumber]), type text),
				    add_FiscalYearStart = Table.AddColumn( add_FiscalYear, "FiscalYearStart", each #date( [FiscalYearStartNumber], if monthOfFiscalYearEnd = 12 then 1 else  monthOfFiscalYearEnd + 1 , 1), type date ),
				    add_FiscalYearEnd = Table.AddColumn( add_FiscalYearStart, "FiscalYearEnd", each Date.EndOfMonth(#date([FiscalYearEndNumber], monthOfFiscalYearEnd, 1)), type date),
				    add_CurrentFiscalYear = Table.AddColumn(add_FiscalYearEnd, "CurrentFiscalYear", each if [FiscalYearStartNumber] = currentFiscalYear then currentText else [FiscalYear], type text),
				    add_FiscalYearsToToday = Table.AddColumn(add_CurrentFiscalYear, "FiscalYearsToToday", each [FiscalYearStartNumber] - currentFiscalYear, Int64.Type),
				    
				    #"-----FISCAL MONTH-----" = "", 
				    add_FiscalMonthNumber = Table.AddColumn(add_FiscalYearsToToday, "FiscalMonthNumber", each Date.Month( Date.AddMonths([Date], - monthOfFiscalYearEnd ) ), Int64.Type),
				    add_FiscalMonthName = Table.AddColumn( add_FiscalMonthNumber, "FiscalMonthName", each Text.Proper(Date.ToText([Date], [Format="MMMM", Culture = language])), type text ),
				    add_FiscalMonthNameShort = Table.AddColumn(add_FiscalMonthName, "FiscalMonthNameShort", each Text.Start([FiscalMonthName], 3), type text),
				    add_CurrentFiscalMonth = Table.AddColumn( add_FiscalMonthNameShort, "CurrentFiscalMonth", each if Date.IsInCurrentMonth([Date]) then currentText else [FiscalMonthName], Text.Type),
				    add_FiscalYearMonthName = Table.AddColumn(add_CurrentFiscalMonth, "FiscalYearMonthName", each [FiscalMonthNameShort] & " " & [FiscalYear], type text),
				    add_FiscalYearMonthNumber = Table.AddColumn( add_FiscalYearMonthName, "FiscalYearMonthNumber", each [FiscalYearStartNumber] * 100 + [FiscalMonthNumber], Int64.Type ),
				    add_FiscalYearMonthCurrent = Table.AddColumn( add_FiscalYearMonthNumber, "FiscalYearMonthCurrent", each if [CurrentFiscalYear] = currentText and [CurrentFiscalMonth] = currentText then currentText else [FiscalYearMonthName], type text),
				    add_FiscalMonthsToToday = Table.AddColumn(add_FiscalYearMonthCurrent, "FiscalMonthsToToday", each [ CurrentFiscalMonth = Date.Month( Date.AddMonths( currentDate, - monthOfFiscalYearEnd ) ), FiscalQuartersToToday = (([FiscalYearStartNumber] - currentFiscalYear) * 12) + ([FiscalMonthNumber] - CurrentFiscalMonth)][FiscalQuartersToToday], Int64.Type ),
				    
				    #"-----FISCAL QUARTER-----" = "", 
				    add_FiscalQuarterNumber = Table.AddColumn(add_FiscalMonthsToToday, "FiscalQuarterNumber", each Number.RoundUp( [FiscalMonthNumber] / 3), Int64.Type),
				    add_FiscalQuarterName = Table.AddColumn(add_FiscalQuarterNumber, "FiscalQuarterName", each "FQ " & Text.From([FiscalQuarterNumber]), Text.Type),
				    add_FiscalMonthOfQuarterNumber = Table.AddColumn(add_FiscalQuarterName, "FiscalMonthOfQuarterNumber", each [FiscalMonthNumber] - 3 * ([FiscalQuarterNumber] - 1) , Int64.Type ),
				    add_FiscalYearQuarterName = Table.AddColumn(add_FiscalMonthOfQuarterNumber, "FiscalYearQuarterName", each [FiscalQuarterName] & " | " & [FiscalYear], type text),
				    add_FiscalYearQuarterNumber = Table.AddColumn(add_FiscalYearQuarterName, "FiscalYearQuarterNumber", each [FiscalYearStartNumber] * 100 + [FiscalQuarterNumber], Int64.Type),
				    add_FiscalQuarterStart = Table.AddColumn(add_FiscalYearQuarterNumber, "FiscalQuarterStart", each Date.StartOfMonth( Date.AddMonths( [Date] , 1-[FiscalMonthOfQuarterNumber] )), Date.Type),
				    add_FiscalQuarterEnd = Table.AddColumn(add_FiscalQuarterStart, "FiscalQuarterEnd", each Date.EndOfMonth( Date.AddMonths( [Date] , 3-[FiscalMonthOfQuarterNumber] )), Date.Type),
				    add_FiscalQuartersToToday = Table.AddColumn(
				        add_FiscalQuarterEnd, 
				        "FiscalQuartersToToday", 
				        each [
				            CurrentFiscalMonth = Date.Month(Date.AddMonths(currentDate, - monthOfFiscalYearEnd)),  
				            CurrentFiscalQuarter = Number.RoundUp(CurrentFiscalMonth / 3),
				            FiscalQuartersToToday = (([FiscalYearStartNumber] - currentFiscalYear) * 4) + ([FiscalQuarterNumber] - CurrentFiscalQuarter)
				        ][FiscalQuartersToToday], 
				        Int64.Type 
				    ),
				    add_CurrentFiscalQuarter = Table.AddColumn(add_FiscalQuartersToToday, "CurrentFiscalQuarter", each if [FiscalQuartersToToday] = 0 then currentText else [FiscalYearQuarterName], type text),
				    add_DayOfFiscalQuarter = Table.AddColumn(add_CurrentFiscalQuarter, "DayOfFiscalQuarter", each Number.From( [Date] - [FiscalQuarterStart] ) + 1, Int64.Type ),
				
				    #"-----RENAME COLUMNS----" = "",
				    columnNamesDictionary = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText("jVjbbtw4DP2XPPcnMpkGCdAm7U6KYlHkQXGUxrseC7A9xWa/fnUjeURx0n2ZkY54aIo6omz9+HGxd5u/+JD+XPy79sOru3j8UPDb+dn/Uwdjexw8mdReMXxbH8JDeHZvyXR06xe3uJvwl6/dG7dusf+Wra9Oy+LnDZ56uZ3cRH4vh9xLln96t0T4cg71l8DD5patYLfzOIyhaZPVx/m54NfjkRozj9LMMq9OTNpktffr4CM0/7xzx2qy98OS4c3fBQGzYQWfFtPF6fjkl97J6eiXAPAwAkxuIMPRDjOculaGJX2U4NSU9MZlu3/5HObttSzTPnz2a236KbXZqrrKRmU5ihEtSjb67v3fPMU07g7+6GbH88ucTy3askuOkRsYEabkt2EeXkNWhaJfRuNfo3vuI8h+riLJCCNqaRvdtPb+ssrcuNruyuhUk5ezyzmJKeVcSFvsyuzTSIAWzZVtaJ7VEOfHDJkV02BGlQkzYaIRf1p8iS0uuYRXOk2E2RpmnExg0tJlRsw7EmJSkSDdhsDxpPHQdpp4qFbEUa4V0mazUiziQCkWuTHLMFWLzKzVQtpsBps0jnrcpblvbVO19nmvQoaH2qdJaRaogalKEuhDhIGOuiXWUVDhgEC+nmJivaz1wzIe/botUs80gqzyMLEIRh/sIUC2ESUqSEXYKLIx7QJt1Vn5pCC2Yh1pBEhFT2xQVAXdGY1JXeCvaqwiHoRWOSA1pqHeBLREV500c6+HhAByVLSsehpg1npyc9Rkkd2/aMmkHRt63STYT5Z6UnUup1HxcXu4j/al/uaTqdg2cD6lBOfzP9ukEx8b9BD7EeYDOu/MT0VXGQYLSmUXuFlvaFXUZSNEinpDg6i3tjujcdZb6y/JC5GRESKR4NCKBdeAJDhiV/XkJ+PkkzwaYCCEnvnFL2N4rhu/GBWIdr7GaOsXobTHL8kEj2HWSHse37jpBXmtPhVABKhRZCElqkUoTKbpZ2F16jGiUt0gCy4bCiB7qBlkgSWDMatiJD4GUzc892Wz70rJkknt9Abf9TubSJDEXVfnd2aZb6j6mZjIHkM6JXOna7ACkAMJ3Rk1ePdeCSYfGFhN6q6vwNfx3J7Hn6+bVvXX0zj/67WuEzp4Q9nsx/Zi+XjXQVkqpAdGBkZoqVpys2DgAtcM/LTLZrjqYhHlKDdGRLT8ROflJyosP5Ng/YmH609Uc/3ZCZBJAETEI3gKa/yGTJ/Nf/i0E9OX897nb+ZjdBcKmvt7fzX6+JAEAVc+CIVV+sUcbdVbqRDkpbCQ8NVUUeHVtOWr91N0BO+n6A3eGMAVvDBUH6IPpHevt9Z0OA1nZmR82NihiCOJ5uDdGua7ODmZy8eoicGFBEppNEDNLxNpDIMF0SQK9xBO/bMPp0k/WSDNbZ6bzEIP8MEWprHsi+t4NvPH93Usa+OvWndPMbV+XfHzL5p820aJKfY/uaewuKepOSyAylcGmcjXBUKDvT6ug5v4AgmvY8pQ/fjFCxlroPUV37x6T/GFy/KDcOsFrUr7pbSNwLvI+liNINs4jiqspjKZUcElUgXgdGKGuqbKA6O+rSrm6lgsYL/dM4z7q0E0UypWsQpdv1WDWayYqgoV+ug+pMEfWlPaBLDSpi8BKMdNeTozBeGr6tRlToOGjzoZZQ+TOL/85g1ILwCBbQWcvVdQ87Hx3o+6NWjy2qOGOn733drnGb9e30l4G2FMrB2kOdBLQAdp0KAe/c/sdXcfquoQnmqIWXzOXYdIFerAuaeblx29tNSY1lezUY0bkFbrGlYX59pLvhtXnAu6J9f44+N/", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [#"en-US" = _t, #"pt-BR" = _t, #"es-ES" = _t]),
				    
				    fromToColumnNames = if language <> "en-US" then List.Zip(Table.ToColumns(Table.SelectColumns(columnNamesDictionary, {"en-US", language}))) else null,
				    renamedColumns = if language <> "en-US" then Table.RenameColumns(add_DayOfFiscalQuarter, fromToColumnNames) else add_DayOfFiscalQuarter
				in
				    renamedColumns
				```

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Table

